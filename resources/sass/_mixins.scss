
@mixin calc($property, $expression) { 
  #{$property}: -webkit-calc(#{$expression}); 
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression}); 
} 

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin keyframes($animation-name) {
    @keyframes #{$animation-name} {
        @content;
    }
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin translateX($var) {
    -webkit-transform: translateX($var);
    -ms-transform: translateX($var);
    transform: translateX($var);
}

@mixin translateY($var) {
  -webkit-transform: translateY($var);
  -ms-transform: translateY($var);
  transform: translateY($var);
}

@mixin translate($x, $y) {
  -webkit-transform: translateX($x) translateY($y);
  -ms-transform: translateX($x) translateY($y);
  transform: translateX($x) translateY($y);
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

@mixin filter($filter-type, $filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

@mixin translate($x, $y) {
   @include transform(translate($x, $y));
}

@mixin b-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin b-radius($radius) {
  -webkit-border-radius: $radius !important;
  -moz-border-radius: $radius !important;
  border-radius: $radius !important;
}

@mixin animation-name($name...) {
  -o-animation-name: $name;
  -moz-animation-name: $name;
  -webkit-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($duration...) {
  -o-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-iteration-count($count...) {
  -o-animation-iteration-count: $count;
  -moz-animation-iteration-count: $count;
  -webkit-animation-iteration-count: $count;
  animation-iteration-count: $count;
}

@mixin position($name, $top: false, $right: false, $bottom: false, $left: false) {

  position: $name;
  @if $top != false {
    top: $top;
  }

  @if $right != false {
    right: $right;
  }

  @if $bottom != false {
    bottom: $bottom;
  }

  @if $left != false {
    left: $left;
  }
}

@mixin block-size($width: auto, $height: auto){
  width: $width;
  height: $height;
}

@mixin flex($align-items: center, $justify-content: center, $flex-direction: row){
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content; 
  flex-direction: $flex-direction; 
}

@mixin button-clear() {
    overflow: visible;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    font: inherit; 
    line-height: normal;
    cursor: pointer;
    -moz-user-select: text;
    outline: none;
    &::-moz-focus-inner {
        padding: 0;
        border: 0;
    }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin background-size($size)
{
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}

@mixin circle($circleSize) {
  width: $circleSize;
  height: $circleSize;
  border-radius: $circleSize/2;
}

@mixin rotate($deg) {
  @include transform(rotate($deg));
}